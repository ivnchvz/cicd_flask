---
- name: Configure EC2 instance
  hosts: all
  become: yes
  vars:
    COMPOSE_DIR: /app
    DOCKER_COMPOSE_VERSION: "v2.25.0"

  tasks:
    - name: Update yum cache
      yum:
        update_cache: yes

    - name: Install required packages
      yum:
        name:
          - docker
          - curl
          - python-pip
        state: present

    - name: Install Docker Compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        mode: '0755'
        force: yes

    - name: Create Docker Compose v2 alias
      file:
        src: "/usr/local/bin/docker-compose"
        dest: "/usr/local/bin/docker-compose-plugin"
        state: link
        force: yes

    - name: Create symlink for Docker Compose v2 compatibility
      file:
        src: "/usr/local/bin/docker-compose"
        dest: "/usr/libexec/docker/cli-plugins/docker-compose"
        state: link
        force: yes
        
    - name: Create /usr/libexec/docker/cli-plugins directory if it doesn't exist
      file:
        path: "/usr/libexec/docker/cli-plugins"
        state: directory
        mode: '0755'
        
    - name: Install Python packages for Docker
      pip:
        name:
          - docker
        state: present
        extra_args: "--ignore-installed"

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Log into Docker Hub
      command: docker login -u {{ docker_username }} -p {{ docker_password }}
      no_log: true
      changed_when: false

    - name: Create app directory
      file:
        path: "{{ COMPOSE_DIR }}"
        state: directory
        mode: '0755'

    - name: Copy docker-compose.yml
      copy:
        src: "{{ playbook_dir }}/../docker-compose.yml"
        dest: "{{ COMPOSE_DIR }}/docker-compose.yml"
        mode: '0644'

    - name: Check Docker Compose version
      command: docker-compose --version
      register: compose_version
      changed_when: false

    - name: Display Docker Compose version
      debug:
        var: compose_version.stdout

    # Use shell module instead of command to allow for pipes and redirection
    - name: Deploy with Docker Compose using shell
      shell:
        cmd: cd {{ COMPOSE_DIR }} && docker-compose up -d
      register: compose_result
      changed_when: "'Creating' in compose_result.stdout or 'Starting' in compose_result.stdout"